{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/FindMovie/FindMovie.tsx","services/getMovieCard.ts","api.ts","components/MoviesList/MoviesList.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","FindMovie","onMovieAdd","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","movieData","setMovieData","_useState5","_useState6","loading","setLoading","_useState7","_useState8","isError","setIsError","Title","Plot","Poster","imdbID","concat","imdbId","getMovieCard","_Fragment","htmlFor","type","id","placeholder","cn","value","onChange","e","target","disabled","onClick","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","toLowerCase","trim","result","finally","MoviesList","movies","map","App","setMovies","newMovie","prev","find","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9f1e491.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { getMovieCard } from '../../services/getMovieCard';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  onMovieAdd: (newMovie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ onMovieAdd }) => {\n  const [query, setQuery] = useState('');\n  const [movieData, setMovieData] = useState<MovieData | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const movie = getMovieCard(movieData);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    setIsError(false);\n  };\n\n  const handleSearch = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const normalizedQuery = query.toLowerCase().trim();\n\n    getMovie(normalizedQuery)\n      .then(result => {\n        if ('Error' in result) {\n          setMovieData(null);\n          setIsError(true);\n        } else {\n          setMovieData(result);\n        }\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const handleAdd = () => {\n    if (movie) {\n      onMovieAdd(movie);\n    }\n\n    setMovieData(null);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': isError })}\n              value={query}\n              onChange={handleChange}\n            />\n          </div>\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', { 'is-loading': loading })}\n              disabled={!query}\n              onClick={handleSearch}\n            >\n              {!movie ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { Movie } from '../types/Movie';\nimport { MovieData } from '../types/MovieData';\n\nconst DEFAULT_IMG = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport function getMovieCard(movieData: MovieData | null): Movie | null {\n  if (!movieData) {\n    return null;\n  }\n\n  const {\n    Title, Plot, Poster, imdbID,\n  } = movieData;\n\n  return {\n    title: Title,\n    description: Plot,\n    imgUrl: Poster === 'N/A' ? DEFAULT_IMG : Poster,\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n    imdbId: imdbID,\n  };\n}\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=769998a1';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { useState } from 'react';\nimport './App.scss';\nimport { FindMovie } from './components/FindMovie';\nimport { MoviesList } from './components/MoviesList';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleMovieAdd = (newMovie: Movie) => {\n    setMovies(prev => {\n      if (prev.find(({ imdbId }) => imdbId === newMovie.imdbId)) {\n        return prev;\n      }\n\n      return [...prev, newMovie];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onMovieAdd={handleMovieAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}